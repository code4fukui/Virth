# 30. Geo3x3_encode without float

function create(val, n)
  res <- []
  for i = 1 to n
    res[i - 1] = 0
  next
  res[0] = val // 100
  res[1] = val // 10 % 10
  res[2] = val % 10
  return res
end

function norm(a)
  n <- a.length
  for i <- n - 1 to 1 step -1
    a[i - 1] <- a[i - 1] + a[i] // 10
    a[i] <- a[i] % 10
  next
end

function add(a, b, c)
  n <- a.length
  for i <- 0 to n - 1
    c[i] <- a[i] + b[i]
  next
  norm(c)
end

function sub(a, b, c)
  n <- a.length
  for i <- n - 1 to 0 step -1
    if a[i] < b[i] and i > 0
      a[i - 1] <- a[i - 1] - 1
      a[i] <- a[i] + 10
    endif
    c[i] = a[i] - b[i]
  next
end

function xmul(a, x)
  n <- a.length
  for i <- n - 1 to 0 step -1
    a[i] = a[i] * x
  next
  norm(a)
end

function xdiv(a, x)
  n <- a.length
  for i <- 0 to n - 1
    d <- a[i] % x
    a[i] <- a[i] // x
    if i < n - 1
      a[i + 1] <- a[i + 1] + d * 10
    endif
  next
end

function divx(a, b)
  n <- a.length
  a2 = []
  c = []
  for i <- 0 to n - 1
    a2[i] = a[i]
    c[i] = 0
  next
  x = 0
  while 1
    sub(a2, b, c)
    if c[0] < 0
      return x
    endif
    x <- x + 1
    a2b(c, a2)
  next
end

function a2b(a, b)
  n <- a.length
  for i <- 0 to n - 1
    b[i] = a[i]
  next
end

function Geo3x3_encode(lat, lng, level)
  n <- lat.length
  lat[1] <- lat[1] + 9
  norm(lat)
  code = ""
  if lng[0] >= 0
    code = "E"
  else
    code = "W"
    n180 = create(180, n)
    add(lng, n180, lng)
  endif
  temp = create(0, n)
  unit <- create(180, n)
  for j <- 1 to level - 1
    xdiv(unit, 3)
    y <- divx(lat, unit)
    x <- divx(lng, unit)
    code = code + (x + y * 3 + 1)
    a2b(unit, temp)
    xmul(temp, x)
    sub(lng, temp, lng)
    a2b(unit, temp)
    xmul(temp, y)
    sub(lat, temp, lat)
  next
  return code
end

level <- 14
lat <- [0, 3, 5, 6, 5, 8, 5, 8, 0]
lng <- [1, 3, 9, 7, 4, 5, 4, 3, 3]
print Geo3x3_encode(lat, lng, level)
